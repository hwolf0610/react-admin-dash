{"version":3,"sources":["views/Apps/programs/Plan/PlanData.js","views/Apps/programs/Plan/Plans.js"],"names":["usersData","id","title","host","totalCreations","status","getBadge","Plans","history","useHistory","className","color","xl","items","fields","key","_classes","hover","tableFilter","itemsPerPageSelect","striped","pagination","doubleArrows","align","itemsPerPage","clickableRows","onRowClick","item","index","push","scopedSlots"],"mappings":"wNA4BeA,EA5BG,CAChB,CAAEC,GAAI,EAAGC,MAAO,oBAAqBC,KAAM,OAAQC,eAAgB,OAAQC,OAAQ,WACnF,CAAEJ,GAAI,EAAGC,MAAO,qBAAsBC,KAAM,OAAQC,eAAgB,OAAQC,OAAQ,WACpF,CAAEJ,GAAI,EAAGC,MAAO,gBAAiBC,KAAM,OAAQC,eAAgB,OAAQC,OAAQ,WAC/E,CAAEJ,GAAI,EAAGC,MAAO,aAAcC,KAAM,OAAQC,eAAgB,OAAQC,OAAQ,WAC5E,CAAEJ,GAAI,EAAGC,MAAO,OAAQC,KAAM,OAAQC,eAAgB,OAAQC,OAAQ,WACtE,CAAEJ,GAAI,EAAGC,MAAO,oBAAqBC,KAAM,OAAQC,eAAgB,OAAQC,OAAQ,WACnF,CAAEJ,GAAI,EAAGC,MAAO,eAAgBC,KAAM,OAAQC,eAAgB,OAAQC,OAAQ,UAC9E,CAAEJ,GAAI,EAAGC,MAAO,YAAaC,KAAM,OAAQC,eAAgB,OAAQC,OAAQ,SC0PvEC,EAAW,SAACD,GAChB,OAAQA,GACN,IAAK,OAAQ,MAAO,UACpB,IAAK,WAAY,MAAO,YACxB,IAAK,UAAW,MAAO,UACvB,IAAK,SAAU,MAAO,SACtB,QAAS,MAAO,YAuDLE,UAnDD,WACZ,IAAMC,EAAUC,cAChB,OACE,yBAAKC,UAAU,mBACb,qCACA,kBAAC,IAAD,CAASC,MAAM,QAAf,YAFF,eAIE,kBAAC,IAAD,CAASA,MAAM,SAAf,WAJF,eAME,kBAAC,IAAD,CAASA,MAAM,SAAf,cACA,6BACA,6BACA,kBAAC,KAAD,KACE,kBAAC,IAAD,CAAMC,GAAI,IACR,kBAAC,IAAD,KACE,kBAAC,IAAD,cAIA,kBAAC,IAAD,KACE,kBAAC,IAAD,CACEC,MAAOb,EACPc,OAAQ,CAAC,CAAEC,IAAK,QAASC,SAAU,oBACjC,OAAQ,iBAAkB,UAC5BC,OAAK,EACLC,aAAW,EACXC,oBAAkB,EAClBC,SAAO,EACPC,WAAY,CAAEC,cAAc,EAAOC,MAAO,UAC1CC,aAAc,EACdC,eAAa,EACbC,WAAY,SAACC,EAAMC,GAAP,OAAiBpB,EAAQqB,KAAR,8BAAoCF,EAAK1B,MACtE6B,YAAa,CACX,OACE,SAACH,GAAD,OACE,4BACE,kBAAC,IAAD,CAAQhB,MAAOL,EAASqB,EAAKtB,SAC1BsB,EAAKtB","file":"static/js/39.6cd20832.chunk.js","sourcesContent":["const usersData = [\n  { id: 0, title: 'Strength Training', host: 'Dash', totalCreations: '3450', status: 'current' },\n  { id: 1, title: 'HIIT for Fast-Loss', host: 'Dash', totalCreations: '3450', status: 'current' },\n  { id: 2, title: 'Booty Builder', host: 'Dash', totalCreations: '3450', status: 'current' },\n  { id: 3, title: 'Abs & Core', host: 'Dash', totalCreations: '3450', status: 'current' },\n  { id: 4, title: 'Body', host: 'Dash', totalCreations: '3450', status: 'current' },\n  { id: 5, title: 'Yoga & Stretching', host: 'Dash', totalCreations: '3450', status: 'current' },\n  { id: 6, title: 'removed Rest', host: 'Dash', totalCreations: '3450', status: 'remove' },\n  { id: 7, title: 'past Plan', host: 'Dash', totalCreations: '3450', status: 'past' },\n  // {id: 8, name: 'Quintin Ed', registered: '2018/02/01', role: 'Admin', status: 'Inactive'},\n  // {id: 9, name: 'Enéas Kwadwo', registered: '2018/03/01', role: 'Member', status: 'Pending'},\n  // {id: 10, name: 'Agapetus Tadeáš', registered: '2018/01/21', role: 'Staff', status: 'Active'},\n  // {id: 11, name: 'Carwyn Fachtna', registered: '2018/01/01', role: 'Member', status: 'Active'},\n  // {id: 12, name: 'Nehemiah Tatius', registered: '2018/02/01', role: 'Staff', status: 'Banned'},\n  // {id: 13, name: 'Ebbe Gemariah', registered: '2018/02/01', role: 'Admin', status: 'Inactive'},\n  // {id: 14, name: 'Eustorgios Amulius', registered: '2018/03/01', role: 'Member', status: 'Pending'},\n  // {id: 15, name: 'Leopold Gáspár', registered: '2018/01/21', role: 'Staff', status: 'Active'},\n  // {id: 16, name: 'Pompeius René', registered: '2018/01/01', role: 'Member', status: 'Active'},\n  // {id: 17, name: 'Paĉjo Jadon', registered: '2018/02/01', role: 'Staff', status: 'Banned'},\n  // {id: 18, name: 'Micheal Mercurius', registered: '2018/02/01', role: 'Admin', status: 'Inactive'},\n  // {id: 19, name: 'Ganesha Dubhghall', registered: '2018/03/01', role: 'Member', status: 'Pending'},\n  // {id: 20, name: 'Hiroto Šimun', registered: '2018/01/21', role: 'Staff', status: 'Active'},\n  // {id: 21, name: 'Vishnu Serghei', registered: '2018/01/01', role: 'Member', status: 'Active'},\n  // {id: 22, name: 'Zbyněk Phoibos', registered: '2018/02/01', role: 'Staff', status: 'Banned'},\n  // {id: 23, name: 'Aulus Agmundr', registered: '2018/01/01', role: 'Member', status: 'Pending'},\n  // {id: 42, name: 'Ford Prefect', registered: '2001/05/25', role: 'Alien', status: 'Don\\'t panic!'}\n]\n\nexport default usersData\n","// import React, { Component } from 'react'\r\n// import { NavLink } from 'react-router-dom'\r\n// import {\r\n//   CCard,\r\n//   CCardHeader,\r\n//   CCardBody,\r\n//   CBadge,\r\n//   CButton,\r\n//   CCollapse,\r\n//   CDataTable\r\n// } from '@coreui/react'\r\n// import data from './_data'\r\n\r\n// import { confirmAlert } from 'react-confirm-alert'; // Import\r\n// import 'react-confirm-alert/src/react-confirm-alert.css'; // Import css\r\n// import { withRouter } from \"react-router\";\r\n\r\n// class Plan extends Component {\r\n// constructor(props) {\r\n//   super(props);\r\n\r\n//   this.toggleDetails = this.toggleDetails.bind(this);\r\n//   this.table = data.rows;\r\n//   this.options = {\r\n//     sortIndicator: true,\r\n//     hideSizePerPage: true,\r\n//     paginationSize: 3,\r\n//     hidePageListOnlyOnePage: true,\r\n//     clearSearch: true,\r\n//     alwaysShowAllBtns: false,\r\n//     withFirstAndLast: false,\r\n//   }\r\n//   this.state = {\r\n//     details: [],\r\n//     usersData: [\r\n//       { title: 'Strength Training', host: 'Dash', totalCreations: '3450' },\r\n//       { title: 'HIIT for Fast-Loss', host: 'Dash', totalCreations: '3450' },\r\n//       { title: 'Booty Builder', host: 'Dash', totalCreations: '3450' },\r\n//       { title: 'Abs & Core', host: 'Dash', totalCreations: '3450' },\r\n//       { title: 'Body', host: 'Dash', totalCreations: '3450' },\r\n//       { title: 'Yoga & Stretching', host: 'Dash', totalCreations: '3450' }\r\n//     ],\r\n//     removedData: [\r\n//       { title: 'removed Rest', host: 'Dash', totalCreations: '3450' }\r\n//     ],\r\n//     pastData: [\r\n//       { title: 'past Plan', host: 'Dash', totalCreations: '3450' },\r\n//     ],\r\n//     TableData:[],\r\n\r\n//   }\r\n// }\r\n\r\n// componentDidMount()  {\r\n//   // setTimeout(() => {\r\n//   //   this.setState({usersData: this.state.usersData.slice(1,4)})\r\n//   // }, 2000)\r\n//   this.setState({TableData:this.state.usersData})\r\n// }\r\n\r\n//   onShowPlanData = (seletedPlanTitle) => {\r\n//     localStorage.setItem(\"seletedPlan\", seletedPlanTitle)\r\n//     // window.location.href=\"/apps/programs/PlanVersion\";\r\n//     // this.props.history.push(\"/apps/programs/PlanVersion\");\r\n//   }\r\n//   onPlanDelete = () => {\r\n// confirmAlert({\r\n//   title: 'Confirm to submit',\r\n//   message: 'Are you sure to do this.',\r\n//   buttons: [\r\n//     {\r\n//       label: 'Yes',\r\n//       onClick: () => alert('Click Yes')\r\n//     },\r\n//     {\r\n//       label: 'No',\r\n//       onClick: () => alert('Click No')\r\n//     }\r\n//   ]\r\n// });\r\n//   }\r\n\r\n// onShowCurrent = () =>{\r\n//   console.log(\"current\")\r\n//   this.setState({TableData:this.state.usersData})\r\n// }\r\n// onShowPast = () =>{\r\n//   console.log(\"past\")\r\n//   this.setState({TableData:this.state.pastData})\r\n// }\r\n// onShowRemoved = () =>{\r\n//   console.log(\"Removed\")\r\n//   this.setState({TableData:this.state.removedData})\r\n// }\r\n//   // just an example\r\n//   nameFormat(cell, row) {\r\n//     const id = `/users/${row.id}`\r\n//     return (\r\n//       <NavLink strict to={id}> {cell} </NavLink>\r\n//     );\r\n//   };\r\n\r\n//   toggleDetails(index) {\r\n//     const position = this.state.details.indexOf(index);\r\n//     (position !== -1) ? this.state.details.splice(position, 1) :\r\n//       this.state.details.push(index);\r\n//     this.setState({ details: this.state.details })\r\n//   }\r\n\r\n//   render() {\r\n\r\n//     //example data\r\n\r\n//     const fields = [\r\n//       { key: 'title', _style: { width: '40%' } },\r\n//       'host',\r\n//       { key: 'totalCreations', _style: { width: '20%' } },\r\n//       // { key: 'status', _style: { width: '20%'} },\r\n//       {\r\n//         key: 'show_details',\r\n//         label: '',\r\n//         _style: { width: '1%' },\r\n//         sorter: false,\r\n//         filter: false\r\n//       }\r\n//     ]\r\n\r\n//     const getBadge = (status) => {\r\n//       switch (status) {\r\n//         case 'Active': return 'success'\r\n//         case 'Inactive': return 'secondary'\r\n//         case 'Pending': return 'warning'\r\n//         case 'Banned': return 'danger'\r\n//         default: return 'primary'\r\n//       }\r\n//     }\r\n\r\n//     return (\r\n//       <div className=\"animated\">\r\n// <h2>Plans</h2>\r\n// <CButton  color=\"info\" onClick={this.onShowCurrent}>\r\n//   Current\r\n//                   </CButton> &nbsp;&nbsp;&nbsp;\r\n// <CButton  color=\"basic\" onClick={this.onShowPast}>\r\n//   Past\r\n//                   </CButton>&nbsp;&nbsp;&nbsp;\r\n// <CButton  color=\"basic\" onClick={this.onShowRemoved}>\r\n//   Removed\r\n//                   </CButton>\r\n// <br />\r\n// <br />\r\n//         <CCard>\r\n//           <CCardHeader>\r\n//             Plans{' '}\r\n//             {/* <div className=\"card-header-actions\">\r\n//               <a href=\"https://github.com/AllenFang/react-bootstrap-table\" rel=\"noopener noreferrer\" target=\"_blank\" className=\"card-header-action\">\r\n//                 <small className=\"text-muted\">docs</small>\r\n//               </a>\r\n//             </div> */}\r\n//           </CCardHeader>\r\n\r\n//           <CCardBody>\r\n\r\n//             <CDataTable\r\n//               items={this.state.TableData}\r\n//               fields={fields}\r\n//               columnFilter\r\n//               tableFilter\r\n//               footer\r\n//               itemsPerPageSelect\r\n//               itemsPerPage={5}\r\n//               hover\r\n//               sorter\r\n//               pagination\r\n//               // loading\r\n//               // onRowClick={(item,index,col,e) => console.log(item,index,col,e)}\r\n//               // onPageChange={(val) => console.log('new page:', val)}\r\n//               // onPagesChange={(val) => console.log('new pages:', val)}\r\n//               // onPaginationChange={(val) => console.log('new pagination:', val)}\r\n//               // onFilteredItemsChange={(val) => console.log('new filtered items:', val)}\r\n//               // onSorterValueChange={(val) => console.log('new sorter value:', val)}\r\n//               // onTableFilterChange={(val) => console.log('new table filter:', val)}\r\n//               // onColumnFilterChange={(val) => console.log('new column filter:', val)}\r\n//               scopedSlots={{\r\n//                 // 'status':\r\n//                 //   (item)=>(\r\n//                 //     <td>\r\n//                 //       <CBadge color={getBadge(item.status)}>\r\n//                 //         {item.status}\r\n//                 //       </CBadge>\r\n//                 //     </td>\r\n//                 //   ),\r\n//                 'show_details':\r\n//                   (item, index) => {\r\n//                     return (\r\n//                       <td className=\"py-2\">\r\n//                         <CButton\r\n//                           color=\"primary\"\r\n//                           variant=\"outline\"\r\n//                           shape=\"square\"\r\n//                           \r\n//                           onClick={() => { this.toggleDetails(index) }}\r\n//                         >\r\n//                           {this.state.details.includes(index) ? 'Hide' : 'Show'}\r\n//                         </CButton>\r\n//                       </td>\r\n//                     )\r\n//                   },\r\n//                 'details':\r\n//                   (item, index) => {\r\n//                     return (\r\n//                       <CCollapse show={this.state.details.includes(index)}>\r\n//                         <CCardBody>\r\n//                           <h4>\r\n//                             {item.title}\r\n//                           </h4>\r\n//                           <p className=\"text-muted\">Host: {item.host}</p>\r\n//                           {/* <button onClick={this.onShowPlanData(item.title)}>show</button> */}\r\n//                           <CButton  color=\"info\" onClick={this.onShowPlanData(item.title)}>\r\n//                             Show Detail\r\n//                           </CButton>\r\n//                           <CButton  color=\"danger\" className=\"ml-1\" onClick={this.onPlanDelete}>\r\n//                             Delete\r\n//                           </CButton>\r\n//                         </CCardBody>\r\n//                       </CCollapse>\r\n//                     )\r\n//                   }\r\n//               }}\r\n//             />\r\n\r\n//           </CCardBody>\r\n//         </CCard>\r\n//       </div>\r\n//     );\r\n//   }\r\n// }\r\n\r\n// // export default Plan;\r\n// export default withRouter(Plan);\r\n\r\n\r\nimport React from 'react';\r\nimport { useHistory } from \"react-router-dom\";\r\nimport {\r\n  CBadge,\r\n  CCard,\r\n  CCardBody,\r\n  CCardHeader,\r\n  CCol,\r\n  CDataTable,\r\n  CRow,\r\n  CButton\r\n} from '@coreui/react';\r\n\r\nimport usersData from './PlanData'\r\n// import profile from '../../assets/img/profile/profile1.png'\r\n\r\nconst getBadge = (status) => {\r\n  switch (status) {\r\n    case 'past': return 'success'\r\n    case 'Inactive': return 'secondary'\r\n    case 'Pending': return 'warning'\r\n    case 'remove': return 'danger'\r\n    default: return 'primary'\r\n  }\r\n}\r\n\r\nconst Plans = () => {\r\n  const history = useHistory()\r\n  return (\r\n    <div className=\"animated fadeIn\">\r\n      <h2>Plans</h2>\r\n      <CButton color=\"info\" >Current </CButton>\r\n      &nbsp;&nbsp;&nbsp;\r\n      <CButton color=\"basic\" > Past  </CButton>\r\n      &nbsp;&nbsp;&nbsp;\r\n      <CButton color=\"basic\" > Removed  </CButton>\r\n      <br />\r\n      <br />\r\n      <CRow>\r\n        <CCol xl={12}>\r\n          <CCard>\r\n            <CCardHeader>\r\n              Plans\r\n              {/* <small className=\"text-muted\"> example</small> */}\r\n            </CCardHeader>\r\n            <CCardBody>\r\n              <CDataTable\r\n                items={usersData}\r\n                fields={[{ key: 'title', _classes: 'font-weight-bold' },\r\n                  'host', 'totalCreations', 'status']}\r\n                hover\r\n                tableFilter\r\n                itemsPerPageSelect\r\n                striped\r\n                pagination={{ doubleArrows: false, align: 'center' }}\r\n                itemsPerPage={5}\r\n                clickableRows\r\n                onRowClick={(item, index) => history.push(`/apps/programs/Plan/${item.id}`)}\r\n                scopedSlots={{\r\n                  'status':\r\n                    (item) => (\r\n                      <td>\r\n                        <CBadge color={getBadge(item.status)}>\r\n                          {item.status}\r\n                        </CBadge>\r\n                      </td>\r\n                    )\r\n                }}\r\n              />\r\n            </CCardBody>\r\n          </CCard>\r\n        </CCol>\r\n      </CRow>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Plans\r\n\r\n\r\n\r\n\r\n\r\n"],"sourceRoot":""}