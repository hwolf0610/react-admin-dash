{"version":3,"sources":["views/Plugins/Draggable/_layouts.js","views/Plugins/Draggable/Draggable.js"],"names":["layoutMd","i","x","y","w","h","static","layouts","xl","lg","md","sm","xs","breakPoints","parseInt","getStyle","ResponsiveGridLayout","WidthProvider","Responsive","Draggable","props","state","JSON","parse","localStorage","getItem","stringify","defaultLayouts","this","setState","layout","setItem","loremIpsum","className","onLayoutChange","breakpoints","cols","isResizable","measureBeforeMount","draggableHandle","key","accentColor","color","size","onClick","resetLayout","name","href","Component"],"mappings":"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","file":"static/js/22.0eb5bb3a.chunk.js","sourcesContent":["// layout is an array of objects\nconst layoutXl = [\n  {i: 'a', x: 0, y: 0, w: 1, h: 2, static: true},\n  {i: 'b', x: 1, y: 0, w: 1, h: 2},\n  {i: 'c', x: 2, y: 0, w: 1, h: 2},\n  {i: 'd', x: 0, y: 1, w: 1, h: 2},\n  {i: 'e', x: 1, y: 1, w: 1, h: 2},\n  {i: 'f', x: 2, y: 1, w: 1, h: 2}\n];\nconst layoutLg = [\n  {i: 'a', x: 0, y: 0, w: 1, h: 2, static: true},\n  {i: 'b', x: 1, y: 0, w: 1, h: 2},\n  {i: 'c', x: 2, y: 0, w: 1, h: 2},\n  {i: 'd', x: 0, y: 1, w: 1, h: 2},\n  {i: 'e', x: 1, y: 1, w: 1, h: 2},\n  {i: 'f', x: 2, y: 1, w: 1, h: 2}\n];\nconst layoutMd = [\n  {i: 'a', x: 0, y: 0, w: 1, h: 2, static: true},\n  {i: 'b', x: 1, y: 0, w: 1, h: 2},\n  {i: 'c', x: 0, y: 1, w: 1, h: 2},\n  {i: 'd', x: 1, y: 1, w: 1, h: 2},\n  {i: 'e', x: 0, y: 2, w: 1, h: 2},\n  {i: 'f', x: 1, y: 2, w: 1, h: 2}\n];\nconst layoutSm = [\n  {i: 'a', x: 0, y: 0, w: 1, h: 2, static: true},\n  {i: 'b', x: 0, y: 1, w: 1, h: 2},\n  {i: 'c', x: 0, y: 2, w: 1, h: 2},\n  {i: 'd', x: 0, y: 3, w: 1, h: 2},\n  {i: 'e', x: 0, y: 4, w: 1, h: 2},\n  {i: 'f', x: 0, y: 5, w: 1, h: 2}\n];\n\nconst layouts = { xl: layoutXl, lg: layoutLg, md: layoutMd, sm: layoutMd, xs: layoutSm };\n\nexport default layouts;\n","import React, { Component } from 'react';\nimport { CButton, CCard, CCardBody, CCardHeader, CBadge } from '@coreui/react';\nimport {\n  CIcon\n} from '@coreui/icons-react';\nimport { Responsive, WidthProvider } from 'react-grid-layout';\nimport { getStyle } from '@coreui/utils'\nimport 'react-grid-layout/css/styles.css'\nimport 'react-resizable/css/styles.css'\nimport './Draggable.css'\nimport defaultLayouts from './_layouts';\n\nconst breakPoints = {}\nbreakPoints.xl = parseInt(getStyle('--breakpoint-xl'), 10)\nbreakPoints.lg = parseInt(getStyle('--breakpoint-lg'), 10)\nbreakPoints.md = parseInt(getStyle('--breakpoint-md'), 10)\nbreakPoints.sm = parseInt(getStyle('--breakpoint-sm'), 10)\nbreakPoints.xs = parseInt(getStyle('--breakpoint-xs'), 10)\n\nconst ResponsiveGridLayout = WidthProvider(Responsive);\n\nclass Draggable extends Component {\n\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      layouts: JSON.parse(localStorage.getItem('CoreUI-React-Draggable-Layouts') || JSON.stringify(defaultLayouts))\n    };\n  }\n\n  resetLayout() {\n    this.setState({ layouts: JSON.parse(JSON.stringify(defaultLayouts)) });\n  }\n\n  onLayoutChange(layout, layouts) {\n    localStorage.setItem('CoreUI-React-Draggable-Layouts', JSON.stringify(layouts))\n    this.setState({ layouts });\n  }\n\n  render() {\n\n    const loremIpsum = 'Lorem ipsum dolor sit amet, consectetuer adipiscing elit, sed diam nonummy nibh euismod tincidunt ut laoreet dolore magna aliquam erat volutpat. Ut wisi enim ad minim veniam, quis nostrud exerci tation ullamcorper suscipit lobortis nisl ut aliquip ex ea commodo consequat.'\n\n    return (\n      <div className=\"animated c-fadeIn\">\n        <ResponsiveGridLayout className=\"layout\" layouts={this.state.layouts}\n                              onLayoutChange={(layout, layouts) =>\n                                this.onLayoutChange(layout, layouts)\n                              }\n                              breakpoints={breakPoints}\n                              cols={{xl: 3, lg: 3, md: 3, sm: 2, xs: 1}}\n                              isResizable={false}\n                              measureBeforeMount={false}\n                              draggableHandle={\".card-header\"}>\n          <CCard\n            \n            key=\"a\"\n            accentColor=\"primary\"\n          >\n            <CCardHeader>\n              Static Card\n              <div className=\"card-header-actions\">\n                <CButton color=\"link\" size=\"sm\" className=\"card-header-action\" onClick={() => this.resetLayout()}>Reset Layout</CButton>\n              </div>\n            </CCardHeader>\n            <CCardBody>\n              {loremIpsum}\n            </CCardBody>\n          </CCard>\n          <CCard\n            \n            key=\"b\"\n            accentColor=\"secondary\"\n          >\n            <CCardHeader>\n              <CIcon name=\"cil-cursor-move\"></CIcon>\n              Drag & Drop Card <CBadge href=\"https://coreui.io/pro/react/\" color=\"danger\">CoreUI Pro Component</CBadge>\n            </CCardHeader>\n            <CCardBody>\n              {loremIpsum}\n            </CCardBody>\n          </CCard>\n          <CCard key=\"c\" accentColor=\"success\">\n            <CCardHeader>\n              <CIcon name=\"cil-cursor-move\"></CIcon>\n              Drag & Drop Card <CBadge href=\"https://coreui.io/pro/react/\" color=\"danger\">CoreUI Pro Component</CBadge>\n            </CCardHeader>\n            <CCardBody>\n              {loremIpsum}\n            </CCardBody>\n          </CCard>\n          <CCard key=\"d\" accentColor=\"info\">\n            <CCardHeader>\n              <CIcon name=\"cil-cursor-move\"></CIcon>\n              Drag & Drop Card <CBadge href=\"https://coreui.io/pro/react/\" color=\"danger\">CoreUI Pro Component</CBadge>\n            </CCardHeader>\n            <CCardBody>\n              {loremIpsum}\n            </CCardBody>\n          </CCard>\n          <CCard key=\"e\" accentColor=\"warning\">\n            <CCardHeader>\n              <CIcon name=\"cil-cursor-move\"></CIcon>\n              Drag & Drop Card <CBadge href=\"https://coreui.io/pro/react/\" color=\"danger\">CoreUI Pro Component</CBadge>\n            </CCardHeader>\n            <CCardBody>\n              {loremIpsum}\n            </CCardBody>\n          </CCard>\n          <CCard key=\"f\" accentColor=\"danger\">\n            <CCardHeader>\n              <CIcon name=\"cil-cursor-move\"></CIcon>\n              Drag & Drop Card <CBadge href=\"https://coreui.io/pro/react/\" color=\"danger\">CoreUI Pro Component</CBadge>\n            </CCardHeader>\n            <CCardBody>\n              {loremIpsum}\n            </CCardBody>\n          </CCard>\n        </ResponsiveGridLayout>\n      </div>\n    )\n  }\n}\n\nexport default Draggable\n"],"sourceRoot":""}