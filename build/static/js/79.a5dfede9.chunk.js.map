{"version":3,"sources":["../node_modules/@coreui/utils/src/rgb-to-hex.js","views/Theme/Colors/Colors.js"],"names":["rgbToHex","color","TypeError","rgb","match","Error","r","parseInt","toString","g","b","slice","ThemeView","props","state","bgColor","elem","ReactDOM","findDOMNode","this","parentNode","firstChild","window","getComputedStyle","getPropertyValue","setState","className","Component","ThemeColor","children","classes","classNames","xl","md","sm","xs","style","paddingTop","Colors"],"mappings":"wRAuBeA,EAtBE,SAAAC,GACf,GAAqB,qBAAVA,EACT,MAAM,IAAIC,UAAU,4BAGtB,GAAc,gBAAVD,EACF,MAAO,YAGT,IAAME,EAAMF,EAAMG,MAAM,wEAExB,IAAKD,EACH,MAAM,IAAIE,MAAJ,UAAaJ,EAAb,8BAGR,IAAMK,EAAI,IAAH,OAAOC,SAASJ,EAAI,GAAI,IAAIK,SAAS,KACtCC,EAAI,IAAH,OAAOF,SAASJ,EAAI,GAAI,IAAIK,SAAS,KACtCE,EAAI,IAAH,OAAOH,SAASJ,EAAI,GAAI,IAAIK,SAAS,KAE5C,iBAAWF,EAAEK,OAAO,IAApB,OAAyBF,EAAEE,OAAO,IAAlC,OAAuCD,EAAEC,OAAO,KCb5CC,E,kDAEJ,WAAYC,GAAQ,IAAD,8BACjB,cAAMA,IAEDC,MAAQ,CACXC,QAAS,sBAJM,E,gEASjB,IAAMC,EAAOC,IAASC,YAAYC,MAAMC,WAAWC,WAC7CpB,EAAQqB,OAAOC,iBAAiBP,GAAMQ,iBAAiB,oBAC7DL,KAAKM,SAAS,CACZV,QAASd,GAASkB,KAAKL,MAAMC,Y,+BAK/B,OACE,2BAAOW,UAAU,eACf,+BACA,4BACE,wBAAIA,UAAU,cAAd,QACA,wBAAIA,UAAU,oBAAqB1B,EAASmB,KAAKL,MAAMC,WAEzD,4BACE,wBAAIW,UAAU,cAAd,QACA,wBAAIA,UAAU,oBAAqBP,KAAKL,MAAMC,gB,GA5BhCY,aAqClBC,E,uKAEM,IAAD,EAEyBT,KAAKN,MAA7Ba,EAFD,EAECA,UAAWG,EAFZ,EAEYA,SAEbC,EAAUC,IAAWL,EAAW,iCAEtC,OACE,kBAAC,IAAD,CAAMM,GAAG,IAAIC,GAAG,IAAIC,GAAG,IAAIC,GAAG,KAAKT,UAAU,QAC3C,yBAAKA,UAAWI,EAASM,MAAO,CAACC,WAAY,SAC5CR,EACD,kBAAC,EAAD,W,GAZiBF,aAmBnBW,E,uKAEF,OACE,yBAAKZ,UAAU,mBACb,yBAAKA,UAAU,QACb,yBAAKA,UAAU,eAAf,gBAGA,yBAAKA,UAAU,aACb,kBAAC,KAAD,KACE,kBAAC,EAAD,CAAYA,UAAU,cACpB,oDAEF,kBAAC,EAAD,CAAYA,UAAU,gBACpB,sDAEF,kBAAC,EAAD,CAAYA,UAAU,cACpB,oDAEF,kBAAC,EAAD,CAAYA,UAAU,aACpB,mDAEF,kBAAC,EAAD,CAAYA,UAAU,cACpB,oDAEF,kBAAC,EAAD,CAAYA,UAAU,WACpB,iDAEF,kBAAC,EAAD,CAAYA,UAAU,YACpB,kDAEF,kBAAC,EAAD,CAAYA,UAAU,WACpB,oDAKR,yBAAKA,UAAU,QACb,yBAAKA,UAAU,eAAf,SAGA,yBAAKA,UAAU,aACb,kBAAC,KAAD,CAAMA,UAAU,QACd,kBAAC,EAAD,CAAYA,UAAU,eACpB,+CAEF,kBAAC,EAAD,CAAYA,UAAU,eACpB,+CAEF,kBAAC,EAAD,CAAYA,UAAU,eACpB,+CAEF,kBAAC,EAAD,CAAYA,UAAU,eACpB,+CAEF,kBAAC,EAAD,CAAYA,UAAU,eACpB,+CAEF,kBAAC,EAAD,CAAYA,UAAU,eACpB,+CAEF,kBAAC,EAAD,CAAYA,UAAU,eACpB,+CAEF,kBAAC,EAAD,CAAYA,UAAU,eACpB,+CAEF,kBAAC,EAAD,CAAYA,UAAU,eACpB,uD,GApEKC,aA8ENW","file":"static/js/79.a5dfede9.chunk.js","sourcesContent":["/* eslint-disable no-magic-numbers */\r\nconst rgbToHex = color => {\r\n  if (typeof color === 'undefined') {\r\n    throw new TypeError('Hex color is not defined')\r\n  }\r\n\r\n  if (color === 'transparent') {\r\n    return '#00000000'\r\n  }\r\n\r\n  const rgb = color.match(/^rgba?[\\s+]?\\([\\s+]?(\\d+)[\\s+]?,[\\s+]?(\\d+)[\\s+]?,[\\s+]?(\\d+)[\\s+]?/i)\r\n\r\n  if (!rgb) {\r\n    throw new Error(`${color} is not a valid rgb color`)\r\n  }\r\n\r\n  const r = `0${parseInt(rgb[1], 10).toString(16)}`\r\n  const g = `0${parseInt(rgb[2], 10).toString(16)}`\r\n  const b = `0${parseInt(rgb[3], 10).toString(16)}`\r\n\r\n  return `#${r.slice(-2)}${g.slice(-2)}${b.slice(-2)}`\r\n}\r\n\r\nexport default rgbToHex\r\n","import React, { Component } from 'react';\nimport ReactDOM from 'react-dom';\nimport classNames from 'classnames';\nimport { CRow, CCol } from '@coreui/react';\n//import { rgbToHex } from '@coreui/coreui-pro/dist/js/coreui-utilities'\nimport { rgbToHex } from '@coreui/utils/src'\n\nclass ThemeView extends Component {\n\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      bgColor: 'rgb(255, 255, 255)'\n    }\n  }\n\n  componentDidMount () {\n    const elem = ReactDOM.findDOMNode(this).parentNode.firstChild;\n    const color = window.getComputedStyle(elem).getPropertyValue('background-color');\n    this.setState({\n      bgColor: color || this.state.bgColor\n    })\n  }\n\n  render() {\n    return (\n      <table className=\"table w-100\">\n        <tbody>\n        <tr>\n          <td className=\"text-muted\">HEX:</td>\n          <td className=\"font-weight-bold\">{ rgbToHex(this.state.bgColor) }</td>\n        </tr>\n        <tr>\n          <td className=\"text-muted\">RGB:</td>\n          <td className=\"font-weight-bold\">{ this.state.bgColor }</td>\n        </tr>\n        </tbody>\n      </table>\n    )\n  }\n\n}\n\nclass ThemeColor extends Component {\n\n  render() {\n\n    const { className, children } = this.props\n\n    const classes = classNames(className, 'theme-color w-75 rounded mb-3')\n\n    return (\n      <CCol xl=\"2\" md=\"4\" sm=\"6\" xs=\"12\" className=\"mb-4\">\n        <div className={classes} style={{paddingTop: '75%'}}></div>\n        {children}\n        <ThemeView/>\n      </CCol>\n    )\n  }\n\n}\n\nclass Colors extends Component {\n  render() {\n    return (\n      <div className=\"animated fadeIn\">\n        <div className=\"card\">\n          <div className=\"card-header\">\n            Theme colors\n          </div>\n          <div className=\"card-body\">\n            <CRow>\n              <ThemeColor className=\"bg-primary\">\n                <h6>Brand Primary Color</h6>\n              </ThemeColor>\n              <ThemeColor className=\"bg-secondary\">\n                <h6>Brand Secondary Color</h6>\n              </ThemeColor>\n              <ThemeColor className=\"bg-success\">\n                <h6>Brand Success Color</h6>\n              </ThemeColor>\n              <ThemeColor className=\"bg-danger\">\n                <h6>Brand Danger Color</h6>\n              </ThemeColor>\n              <ThemeColor className=\"bg-warning\">\n                <h6>Brand Warning Color</h6>\n              </ThemeColor>\n              <ThemeColor className=\"bg-info\">\n                <h6>Brand Info Color</h6>\n              </ThemeColor>\n              <ThemeColor className=\"bg-light\">\n                <h6>Brand Light Color</h6>\n              </ThemeColor>\n              <ThemeColor className=\"bg-dark\">\n                <h6>Brand Dark Color</h6>\n              </ThemeColor>\n            </CRow>\n          </div>\n        </div>\n        <div className=\"card\">\n          <div className=\"card-header\">\n            Grays\n          </div>\n          <div className=\"card-body\">\n            <CRow className=\"mb-3\">\n              <ThemeColor className=\"bg-gray-100\">\n                <h6>Gray 100 Color</h6>\n              </ThemeColor>\n              <ThemeColor className=\"bg-gray-200\">\n                <h6>Gray 200 Color</h6>\n              </ThemeColor>\n              <ThemeColor className=\"bg-gray-300\">\n                <h6>Gray 300 Color</h6>\n              </ThemeColor>\n              <ThemeColor className=\"bg-gray-400\">\n                <h6>Gray 400 Color</h6>\n              </ThemeColor>\n              <ThemeColor className=\"bg-gray-500\">\n                <h6>Gray 500 Color</h6>\n              </ThemeColor>\n              <ThemeColor className=\"bg-gray-600\">\n                <h6>Gray 600 Color</h6>\n              </ThemeColor>\n              <ThemeColor className=\"bg-gray-700\">\n                <h6>Gray 700 Color</h6>\n              </ThemeColor>\n              <ThemeColor className=\"bg-gray-800\">\n                <h6>Gray 800 Color</h6>\n              </ThemeColor>\n              <ThemeColor className=\"bg-gray-900\">\n                <h6>Gray 900 Color</h6>\n              </ThemeColor>\n            </CRow>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Colors;\n"],"sourceRoot":""}